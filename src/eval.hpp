#pragma once

#include "types.hpp"
#include "utils.hpp"
#include "position.hpp"

namespace Spotlight {

// piece values

constexpr int piece_values[2][6] = {{100, 250, 300, 400, 900, 0}, {100, 250, 300, 400, 900, 0}};
constexpr int phase_values[6] = {0, 3, 3, 5, 8, 0};
const int TOTAL_PHASE = phase_values[PAWN] * 16 + phase_values[KNIGHT] * 4 
+ phase_values[BISHOP] * 4 + phase_values[ROOK] * 4 + phase_values[QUEEN] * 2;

// piece square tables

constexpr int piece_square_tables[6][2][64] = {
    {
        {
              0,   0,   0,   0,   0,   0,   0,   0,
             68,  75,  65,  59,  61,  69,  16,  38,
             -5,  31,  21,  45,  46,  39,  32, -33,
            -42, -11, -22,   2,   5,  -2,  -7, -41,
            -51, -28, -32,  -9,  -6, -23, -22, -51,
            -45, -33, -29, -30, -28, -33,  -3, -49,
            -62, -38, -42, -49, -41, -19,  -5, -56,
              0,   0,   0,   0,   0,   0,   0,   0,
        },
        {
              0,   0,   0,   0,   0,   0,   0,   0,
             65,  71,  65,  55,  54,  69,  68,  63,
             49,  49,  40,  38,  21,  29,  41,  40,
             14,  12,  -6,  -8, -16, -10,   6,   9,
              3,   7, -12, -11, -16, -11,  -3,  -1,
            -19,  -1, -14, -14, -11, -12, -12, -14,
              2,  10,   6,   8,  -4,  -7,  -1,  -3,
              0,   0,   0,   0,   0,   0,   0,   0,
        },
    },
    {
        {
            -76,  13,  12,   2,  65, -33, -29, -25,
             -6,  29,  50,  73,  39,  75,  47,  41,
             43,  53,  69,  72,  73,  67,  68,  57,
             23,  43,  58,  65,  66,  69,  57,  60,
             23,  33,  48,  51,  51,  50,  48,  34,
              3,  26,  33,  35,  47,  39,  42,  15,
             20,  15,  23,  22,  22,  29,  20, -13,
              5,   0, -19, -14,  13,  -8,   3, -53,
        },
        {
            -35, -33,  23,  -5,   3,  13, -40, -11,
             13,   0,  20,   2,   9,   4, -34, -38,
            -10,  17,  22,  30,  29,  31,  29,  -1,
              6,  21,  28,  33,  25,  21,  33,  -7,
              8,  22,  28,  26,  37,  24,   2,  16,
             -5,   1,  19,  22,   6,   3,  -4, -26,
            -44,  -1,   3,  13,  13, -17, -13, -21,
            -47, -48,   7, -19,  -5, -36, -27, -73,
        },
    },
    {
        {
             38, -56, -22,  24, -42, -51, -35,  53,
            -36,  43,  20, -39,  64,  67,  31,  32,
            -10,  42,  44,  64,  76,  67,  62,  24,
              6,  31,  24,  54,  63,  59,  29,  32,
              4,  40,  36,  39,  55,  19,  47,  10,
              7,  34,  18,  31,  10,  33,  15,   3,
              7,   5,  23,   3,  17,   7,  29, -17,
            -37,  -7, -14, -23, -23,  -9, -22,   7,
        },
        {
            -62,  -2, -32, -37, -17, -38, -41, -69,
            -20, -50, -12, -16, -29, -44, -39, -63,
            -16, -32, -33, -30, -45, -39, -21, -30,
            -43, -29, -35, -23, -25, -33, -17, -46,
            -48, -36, -28, -28, -35, -12, -42, -48,
            -50, -54, -18, -25, -12, -40, -38, -15,
            -40, -45, -49, -25, -36, -29, -52, -53,
            -61, -42, -56, -46, -34, -52, -51, -52,
        },
    },
    {
        {
             60,  60,  62,  67,  64,  62,  55,  57,
             36,  52,  60,  61,  65,  66,  39,  62,
             39,  55,  59,  63,  66,  63,  68,  65,
              2,  18,  35,  57,  42,  59,  53,  21,
            -27,   5, -15,  24,  38,  14,  28, -11,
            -37, -15, -30, -28,   3,  -3,  20, -12,
            -27,   1,  -1,   4,   3,  17,  17, -46,
            -14, -13,  -5,  11,  21,   6, -33, -14,
        },
        {
             40,  43,  35,  45,  39,  39,  40,  47,
             51,  49,  51,  48,  49,  47,  48,  42,
             43,  39,  32,  38,  44,  46,  34,  34,
             48,  49,  40,  38,  39,  39,  19,  32,
             55,  44,  42,  31,  23,  40,  19,  26,
             21,  41,  37,  47,  24,  23,  13,   5,
             36,  16,  25,  20,  16,  10,   8,   5,
             14,  35,  39,  28,  19,  25,  57,   5,
        },
    },
    {
        {
            -49, -42,  55,  66,  11,  31,  33,  12,
            -45, -35, -23,  17,  44,   5,  12,  31,
            -25, -20, -14,  28,  31,  -7,  13,  26,
            -23, -41,   1,  21,  -1,  17, -18,  -2,
            -31, -39, -28, -25, -10, -12,  -8, -20,
            -40, -18, -20, -14, -40, -14,  -9,  -7,
            -55, -20,  -9, -23, -20, -13, -23, -24,
            -52, -49, -37, -21, -31, -53, -48, -63,
        },
        {
            -16, -17, -36, -64, -54, -14, -48, -49,
             12, -21,  -4, -43, -14,  -6, -40, -13,
            -37, -32, -19,  -2, -36,  21,  22,   0,
            -31, -39, -54, -32,  -9, -25,   9, -13,
            -40, -35, -35,  -2, -31, -19,  -8, -42,
            -31, -64, -36, -46, -28, -29, -29, -76,
            -22, -75, -74, -76, -69, -74, -71, -75,
            -52, -45, -62, -68, -69, -60, -61, -43,
        },
    },
    {
        {
            -57, 100,  94,  11, -58,  81,  -4, 107,
            -80,  30,  37,   2,  47, -13, -45,  68,
           -100,  17,  17, -17, -55,  17, -31,-105,
            -25, -25, -25, -13,  12, -12,   4, -86,
             14,  42, -43,  29,  -9, -68, -73, -80,
             23, -43, -61, -62, -69, -47, -23, -41,
              9,  11, -32, -56, -50, -10,   3,  16,
             40,  15,  12, -43,   7, -22,  40,  34,
        },
        {
            -68, -71, -60,  22, -46, -37, -26, -68,
             -9,  41,  29,  25,   8,  24,  26, -28,
             45,  54,  41,  42,  41,  35,  43,  44,
             22,  36,  32,  27,  33,  26,  27,  25,
              6,   6,  28,  12,  21,  29,  20,  17,
            -17,   3,  19,  22,  27,  14,   3,  -6,
            -22,  -9,  -8,  15,  18,   1,  -6, -26,
            -44, -29, -13, -19, -37, -13, -35, -48,
        },
    },
    
// {
//     {
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//     },
//     {
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//     },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
};

int eval(Position &pos);

} // namespace Spotlight
