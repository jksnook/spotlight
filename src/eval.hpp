#pragma once

#include "types.hpp"
#include "utils.hpp"
#include "position.hpp"

namespace Spotlight {

// piece values

constexpr int piece_values[2][6] = {{100, 250, 300, 400, 900, 0}, {100, 250, 300, 400, 900, 0}};
constexpr int phase_values[6] = {0, 3, 3, 5, 8, 0};
const int TOTAL_PHASE = phase_values[PAWN] * 16 + phase_values[KNIGHT] * 4 
+ phase_values[BISHOP] * 4 + phase_values[ROOK] * 4 + phase_values[QUEEN] * 2;

// piece square tables

constexpr int piece_square_tables[6][2][64] = {
    {
        {
              0,   0,   0,   0,   0,   0,   0,   0,
             93, 110,  66,  91,  74,  19,  19,  18,
            -19,  19,  -6,  34,  27,  21,   0, -24,
            -59, -22, -23,  -8,  -1, -18, -11, -50,
            -62, -41, -32, -14, -14, -23, -24, -58,
            -62, -34, -30, -41, -33, -38,   3, -49,
            -79, -39, -47, -65, -58, -21,  -4, -58,
              0,   0,   0,   0,   0,   0,   0,   0,
        },
        {
              0,   0,   0,   0,   0,   0,   0,   0,
             98, 103, 101,  86,  80,  99, 101,  85,
             70,  71,  63,  47,  33,  41,  56,  45,
             35,  26,   6,  -8,  -8,  -5,   7,  20,
             22,  14,  -1, -14, -12, -11,   0,   2,
             15,   6,  -8,   0,  -6,  -3, -10,  -2,
             26,  12,  -1,  -9,   4,  -5,  -8,  -1,
              0,   0,   0,   0,   0,   0,   0,   0,
        },
    },
    {
        {
            -73,   6, -18,  50,  85, -71,  16, -14,
             19,  56,  89, 118,  82, 120,  26,  58,
             80,  88, 111, 118, 121, 114, 108,  76,
             68,  63, 100, 100,  94, 105,  76,  87,
             40,  53,  73,  73,  85,  77,  66,  55,
             28,  55,  54,  59,  66,  65,  72,  38,
              8,  -1,  39,  47,  51,  60,  43,  30,
              1,  23,  10,   9,  17,  23,  31, -18,
        },
        {
            -47, -43, -11, -28, -37,   2, -36, -51,
            -29, -27, -18, -24, -21, -33, -30, -55,
            -36, -17,  -8, -10, -14, -13, -13, -29,
            -29,  -6, -13,  -2,  19,  10,  -2, -40,
            -23,  -8,  10,   3,   0,  -1, -19, -22,
            -43, -22,  -3,  -2,  -3, -14, -29, -59,
            -39, -22, -33, -21, -15, -36, -36, -38,
            -61, -89, -26, -36, -36, -38, -71, -52,
        },
    },
    {
        {
             37, -42,   0,  -8,   4, -67, -49,  57,
              8,  45,  36,   9,  64,  46,  45,  32,
             31,  60,  65, 102, 108, 105,  69,  58,
             27,  49,  51,  87,  89,  88,  52,  48,
             38,  46,  62,  72,  73,  49,  70,  41,
             30,  52,  44,  46,  36,  57,  49,  27,
             33,  39,  53,  33,  44,  44,  58,  15,
            -11,   9,  20,  16,  20,  18,  13,   9,
        },
        {
            -49, -45, -38, -25, -44, -22, -34, -73,
            -41, -39, -48, -43, -55, -56, -43, -62,
            -45, -44, -40, -52, -64, -37, -58, -42,
            -51, -32, -30, -43, -47, -52, -38, -56,
            -52, -51, -33, -39, -43, -35, -63, -62,
            -72, -49, -42, -31, -30, -49, -55, -56,
            -75, -72, -66, -53, -58, -63, -74, -96,
            -87, -53, -99, -62, -69, -91, -87, -72,
        },
    },
    {
        {
             95, 108, 105, 114, 109, 113,  87,  94,
             72,  93, 109, 110, 114, 114,  81,  89,
             58,  88,  77, 101, 111, 104,  91,  75,
             10,  21,  57,  70,  65,  71,  50,  22,
            -14,  -5,  12,  20,  38,   8,  19,  -3,
            -21,  -4,  -8, -17,  13,   3,  16,  -5,
            -34,  -2,  10,   7,   7,  17,  -2, -56,
             -4,   3,   6,  25,  35,  19, -32, -10,
        },
        {
              8,   2,   7,   6,   2,  -1,  15,  15,
             21,   9,   4,   8,   6,   4,  12,  18,
             21,  11,  18,  15,   2,   4,   8,   7,
             25,  24,  15,  13,  13,   5,  12,  21,
             24,  26,  23,  21,   8,  21,  13,  12,
             13,  15,  18,  20,   4,  11,   9, -10,
             10,  -3,   6,  -1,  -1,   7,  16,   6,
              9,  10,  23,  13,   0,  10,  37, -16,
        },
    },
    {
        {
            -55, -21,  31,  88,  41,  66,  -8, -15,
            -57, -46,  -7, -25,  23,   2,  13,  -3,
            -32, -32, -10,  27,  25,  25,   1,  14,
            -46, -30, -15,  -9,  -9,  -2, -27, -11,
            -24, -42, -30, -28,  -8, -24, -22, -35,
            -47, -23, -27, -24, -32, -23, -20, -27,
            -70, -30, -11, -17, -20, -10, -29, -54,
            -31, -53, -35, -20, -21, -56, -44, -43,
        },
        {
            -64, -69, -78, -98, -57, -68, -88, -66,
            -34, -49, -50, -22, -52, -46, -62, -54,
            -82, -70, -59, -51, -46, -34, -27, -38,
            -63, -74, -47, -40, -27,  -7, -25, -43,
            -92, -80, -47, -26, -70, -45, -33, -14,
            -78, -97, -62, -78, -76, -52, -60, -73,
            -68,-121,-121,-122,-105,-124,-118,-113,
           -110, -92,-111,-117,-120,-108,-109, -55,
        },
    },
    {
        {
            -85, 151, 118, -11, -15,  52,  39, 159,
            -27,   2,  -6, -39,  86,  30,   8, 106,
            -69, -26, -10, -55, -25, -35,  24, -47,
            -24,  -2,  -6, -56, -32, -11,  -1, -55,
            -15,   5, -54, -17, -45, -58, -42, -86,
             -3, -38, -60, -78, -73, -60, -24, -50,
             32,  16, -26, -50, -50,  -4,  11,  28,
             43,   9,  16, -39,  22, -21,  58,  49,
        },
        {
           -108, -70, -32, -12,  -8, -28,   0, -55,
            -14,   9,  57,  69,  46,  49,  28,   7,
             31,   8,  37,  68,  79,  73,  32,  34,
             20,  38,  49,  69,  67,  64,  56,  53,
             20,  31,  53,  55,  64,  66,  53,  50,
             18,  35,  50,  61,  65,  54,  36,  35,
              4,  19,  32,  43,  50,  35,  23,   6,
            -14,   0,  11,   5, -21,   7, -13, -31,
        },
    },
    
// {
//     {
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//     },
//     {
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//     },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
};

int eval(Position &pos);

} // namespace Spotlight
