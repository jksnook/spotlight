#pragma once

#include "types.hpp"
#include "utils.hpp"
#include "position.hpp"

namespace Spotlight {

// piece values

constexpr int piece_values[2][6] = {{100, 250, 300, 400, 900, 0}, {100, 250, 300, 400, 900, 0}};
constexpr int phase_values[6] = {1, 2, 3, 4, 6, 0};
const int TOTAL_PHASE = phase_values[PAWN] * 16 + phase_values[KNIGHT] * 4 
+ phase_values[BISHOP] * 4 + phase_values[ROOK] * 4 + phase_values[QUEEN] * 2;

// piece square tables

constexpr int piece_square_tables[6][2][64] = {
    {
        {
              0,   0,   0,   0,   0,   0,   0,   0,
             68,  71,  66,  58,  66,  61,  43,  50,
             -4,  27,  18,  51,  45,  40,  12, -29,
            -41,  -6, -17,   7,  10,  -2, -10, -38,
            -46, -32, -31,  -9,  -4, -16, -20, -51,
            -46, -33, -33, -28, -22, -25,   4, -47,
            -61, -39, -45, -49, -42, -19,  -2, -59,
              0,   0,   0,   0,   0,   0,   0,   0,
        },
        {
              0,   0,   0,   0,   0,   0,   0,   0,
             68,  70,  64,  56,  58,  58,  66,  62,
             49,  47,  32,  29,   4,  27,  40,  38,
             17,   9,  -4, -16, -24, -13,   8,   5,
             10,   1, -10, -25, -19, -20,  -6,  -4,
            -11,  -2, -11, -13, -22, -17, -21, -17,
              2,  18,   3, -11,   0, -10,  -8,  -6,
              0,   0,   0,   0,   0,   0,   0,   0,
        },
    },
    {
        {
            -77, -39,  24,  75,  70, -39,  82, -54,
            -13,  56,  65,  66,  58,  71,  55,  25,
             63,  62,  66,  71,  69,  68,  64,  60,
             26,  43,  58,  63,  64,  69,  59,  62,
             12,  19,  46,  53,  48,  56,  58,  34,
              2,  16,  29,  34,  45,  39,  35,  18,
             13,   4,  20,  22,  24,  27,  31,   2,
             27,  -3, -37,  -7, -26,  -9,   0, -30,
        },
        {
            -67, -16, -31, -35,  -6, -16, -69,  26,
             25, -21,  -4,   9,  -8,   0, -30, -53,
            -45,   7,  12,  29,  28,  30,  25,   3,
            -14,  24,  10,  32,  39,  28,  11,  30,
             -4,  14,  17,  20,  31,  18,  -8,  -8,
             -2,   1,  18,  21,  13,  -5,   4, -38,
            -63,  23,  -4,  -5,   2, -10,  -6, -44,
            -40, -50, -11,  -8,   1, -25, -37, -53,
        },
    },
    {
        {
             26,  40,   5,   9, -41, -29, -38,  21,
            -48,  61,  47, -15,  11,  34,  61,  52,
             16,  34,  36,  70,  73,  69,  51,  30,
             -8,  27,  24,  52,  60,  67,  28,  18,
             12,  -9,  25,  50,  57,  23,  43,  10,
              0,  38,  14,  25,   7,  25,  18,  11,
            -33,   3,  21,   5,  17,  14,  25,  -7,
            -23,  -2, -14, -34, -46, -15, -39, -13,
        },
        {
             -1, -52, -42, -43, -12, -22,  -2,  -6,
            -27, -45, -49, -24, -23, -22, -33, -51,
            -35, -44, -28, -51, -33, -35, -22, -38,
            -54, -26, -36, -11, -30, -47, -29, -37,
            -50, -35, -18, -39, -44, -22, -61, -52,
            -38, -63, -28, -39, -10, -32, -33, -26,
            -31, -50, -55, -39, -44, -51, -57, -51,
            -58, -60, -57, -46, -39, -54, -56, -53,
        },
    },
    {
        {
             57,  56,  63,  56,  54,  64,  56,  64,
             46,  55,  58,  65,  63,  64,  56,  59,
             37,  46,  58,  60,  52,  60,  58,  60,
             24,  12,  46,  48,  47,  57,  51,  26,
            -19, -10, -16,  12,  22, -12,  13, -12,
            -45, -13, -25, -26, -17,  -5,  -9, -30,
            -21,   4,  -2,   1,  -9,  17,  23, -47,
            -12,  -6,  -7,   5,  23,   2, -32, -16,
        },
        {
             40,  43,  45,  51,  53,  50,  50,  50,
             39,  45,  41,  48,  53,  49,  44,  51,
             34,  47,  33,  44,  47,  47,  36,  29,
             43,  46,  45,  38,  37,  34,  19,  37,
             44,  54,  54,  39,  42,  48,  29,  35,
             26,  41,  45,  46,  46,  31,  42,  30,
             17,  -1,  27,  25,  25,  14,   8,   7,
              6,  28,  35,  33,  19,  25,  59,  -8,
        },
    },
    {
        {
            -36, -34,  50,  56,  64,  56,   4, -20,
            -18, -14,  20,  38,  56, -26,  16,  30,
            -36, -28, -19,  34,   2,  28,  15,  10,
            -25, -44,   0,  21,   6,   6, -32,   4,
            -27, -32, -35, -21, -37, -33, -29, -22,
            -33, -26, -30, -21, -45, -22, -11, -26,
            -58, -24, -12, -26, -25, -13, -16, -38,
            -55, -51, -40, -25, -21, -53, -55, -30,
        },
        {
            -44, -21, -23, -19, -74, -60, -15,  -6,
            -54, -42, -42, -50, -47,  -6,  -7, -10,
            -44,  -1, -25, -52, -17, -24,  21,   2,
            -42, -35, -39, -41, -34,   7,  13,   2,
            -48, -31, -18,  -5,   6,   2,  32,  -8,
            -48, -46, -30, -39, -30,   8, -37, -55,
            -10, -63, -76, -67, -54, -72, -74, -46,
            -38, -43, -51, -68, -75, -55, -60, -47,
        },
    },
    {
        {
            -81,  86,  79,  62, -74,  84,  41, -53,
            -83,  19,  38,  22,  26,  34,   8,  65,
            -54,  -5,  48,  46,  38,  38,   1, -37,
            -23,  17, -23,  34,  33,  37,  14, -83,
            -55, -11, -10,  51,  24, -50,  -2, -77,
            -27, -56, -64, -70, -65, -49, -43, -59,
             11,  -1, -49, -52, -43,  -9,   2, -15,
             41,   0,  16, -35,  11, -13,  38,  30,
        },
        {
            -77, -55, -14,  -5, -16, -23, -16, -68,
             23,  24,  43,  39,  52,  20,  34, -11,
             50,  45,  43,  48,  41,  47,  40,  47,
             13,  40,  28,  33,  27,  29,  32,  37,
              1,  27,  24,  12,  20,  31,   9,  21,
            -10,  19,  24,  34,  32,  24,  16,  11,
            -19,  -4,   5,  20,  18,   4,  -5,  -4,
            -49,  -7, -14, -23, -41, -23, -33, -48,
        },
    },
    
// {
//     {
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//     },
//     {
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//           0,   0,   0,   0,   0,   0,   0,   0,
//     },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
// {
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
//   {
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//         0,   0,   0,   0,   0,   0,   0,   0,
//   },
// },
};

int eval(Position &pos);
}